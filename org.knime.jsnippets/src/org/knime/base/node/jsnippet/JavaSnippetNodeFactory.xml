<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./java_snippet.png" type="Manipulator">
	<name>Java Snippet</name>
	<shortDescription>Calculates a new columns or flow variables based on
		java code snippets.</shortDescription>
	<fullDescription>
		<intro>
			<p>This node allows you to execute arbitrary java code to create
				new columns or replace existing ones. Enter the java code in
				the text area.
			</p>
			<p> Output columns are defined by creating and binding a java field
				for each column. The value assigned to this field will be written
				to the output.
			</p>
			<p> This node allows adding or modifying flow variables in the same
				manner.
			</p>
			<p>It is also possible to use external java libraries (libraries that are
				not part of java boot classpath). In order to include external jar or
				zip files, add their location in the "Additional Libraries" tab.
			</p>
			<p>Advanced users may want to make use of a library that is already present
				in the KNIME Analytics Platform installation as a bundle.
				Adding them to the list in the "Additional Bundles" tab will make them
				available to the java snippet's classpath.
			</p>
			<p>You can define reusable templates with the "Create templates..."
				button. Templates are stored in the user's workspace by default
				and can be accessed via the "Templates" tab.
			</p>
		</intro>
		<option name="Column List">
			This list contains the columns that are available in the input table.
			Double click any of the entries to insert a respective field
			in the code editor and insert the field name at the current cursor
			position (replacing the selection, if any).
		</option>
		<option name="Flow Variable List">
			This list contains the flow variables that are currently available at
			the node input.
			Double click any of the entries to insert a respective field
			in the code editor and insert the field name at the current cursor
			position (replacing the selection, if any).
		</option>
		<option name="Snippet text area">
			Enter your java code here. You can access input columns or flow
			variables by defining them in the <b>"Input"</b> table of the dialog.
			Alternatively use the methods <i>getCell(name, type)</i> or
			<i>getFlowVariable(name, type)</i> where <i>name</i> is the name of
			the input column or the flow variable.

			You can use the following values for the <i>type</i> parameter. <br />
			<i>tString</i> : String (f) <br />
			<i>tInt</i> : Integer (f) <br />
			<i>tDouble</i> : Double (f) <br />
			<i>tLong</i> : Long <br />
			<i>tBoolean</i> : Boolean <br />
			<i>tDate</i> : java.util.Date <br />
			<i>tCalendar</i> : java.util.Calendar <br />
			<i>tXML</i> : org.w3c.document <br />

			(f) These Types can be used for flow variables. <br />
			<br />

			<b>Java Snippet Methods:</b><br />
			<i>getCell(name, type)*</i> : Get value of a cell by column name <br />
			<i>isType(name, type)*</i> : Test for type by column name <br />
			<i>isMissing(name)*</i> : Check if missing by column name <br />
			<i>columnExists(name)*</i> : Check if column with given name exists <br />
			<i>getColumnCount(index, type)</i> : Number of columns in the input table <br />
			<i>getColumnName(index)</i> : Retrieve column name at index <br />
			<br />
			<i>getFlowVariable(name, type)</i> : Get value of a flow variable by name <br />
			<i>getFlowVariables(type)</i> : Get all flow variables by type. A name to value map is returned. <br />
			<i>flowVariableExists(name)</i> : Check if a flow variable with given name exists <br />
			<i>isFlowVariableOfType(name, type)</i> : Check if a flow variable is of type <br />

			* Methods exist in a variant that takes the column index instead of
			its name.

			<p>
				You can hit <i>CTRL+SPACE</i> for auto completion which will popup
				a list with all available classes, methods and fields available
				at your current cursor location. When you select a class and hit
				<i>enter</i> an import statement will be generated if missing.
			</p>

			<p>Note that the snippet allows defining custom global variables
				and imports.
			</p>

			<p>
				Exceptions in the snippet are caught by the framework and will
				result in missing values for all output columns of the row being
				processedâ€”unless there are flow variables defined by the
				snippet (in which case the execution will always fail).
				You can force the node to fail execution by throwing an exception
				of class <tt>Abort</tt>.
			</p>
		</option>
		<option name="Input">
			Define input fields for the snippet here. Every field will be populated
			with the data of the associated input column or flow variable
			during execution.
			For missing values in the input the field is set to <tt>null</tt>.
		</option>
		<option name="Output">
			Define output columns and flow variables here. Every row in the
			<b>Output</b> table defines a java field bound to an output column
			or flow variable. Values assigned to this field in the snippet will
			show up at the output.
		</option>
	</fullDescription>
	<ports>
		<inPort name="An input table" index="0">
			Input table.
		</inPort>
		<outPort name="Appended table" index="0">
			Input table with additional or replaced columns.
		</outPort>
	</ports>
</knimeNode>
